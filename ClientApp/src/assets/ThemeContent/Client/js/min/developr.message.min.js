(function (e, t) { e.fn.message = function (t, n) { var r = e.extend({}, e.fn.message.defaults, n), i; i = e(); this.each(function (n) { var s = e(this), o = e.extend({}, r, s.data("message-options")), u = ["message"].concat(o.classes), a = o.position.toLowerCase() != "bottom", f = a ? o.append ? "prependTo" : "insertBefore" : o.append ? "appendTo" : "insertAfter", l = o.node.toLowerCase() === "a" ? ' href="' + o.link + '"' : "", c = o.simpler ? " simpler" : "", h = o.inset ? " inset" : "", p = o.showCloseOnHover ? " show-on-parent-hover" : "", d = o.closable ? '<span class="close' + h + p + c + '">✕</span>' : "", v = o.arrow && e.inArray(o.arrow.toLowerCase(), ["top", "right", "bottom", "left"]) > -1, m = v ? '<span class="block-arrow ' + o.arrow.toLowerCase() + '"><span></span></span>' : "", g, y, b, w = "", E, S, x = false, T; if (o.groupSimilar) { if (o.append) { S = s.childrenImmediates(".message", !a).not(".closing") } else { S = s[a ? "prevImmediates" : "nextImmediates"](".message").not(".closing") } S.each(function (n) { var r = e(this); if (r.data("message-text") === t) { x = r; return false } }); if (x) { if (o.groupCount) { T = x.children(".count"); if (T.length > 0) { T.text((parseInt(T.text(), 10) || 1) + 1) } else { x.append('<span class="count left' + h + '">2</span>') } } x.shake(); i = i.add(x); return x } } if (o.stripes) { b = o.darkStripes ? "dark-" : ""; g = o.stripesSize === "big" || o.stripesSize === "thin" ? o.stripesSize + "-" : ""; y = o.animatedStripes ? " animated" : ""; w = '<span class="' + b + g + "stripes" + y + '"></span>' } E = e("<" + o.node + l + ' class="' + u.join(" ") + c + '">' + w + t + d + m + "</" + o.node + ">")[f](s); E.data("message-text", t); s.data("messages", (s.data("messages") || e()).add(E)); i = i.add(E); if (o.animate) { E.hide().slideDown(o.animateSpeed) } if (o.autoClose) { setTimeout(function () { E.foldAndRemove() }, o.autoClose) } }); return i }; e.fn.clearMessages = function (n, r) { if (typeof n === "boolean") { r = n; n = "" } r = r || r === t; this.each(function (t) { var i = e(this).data("messages"), s; if (i) { if (n && n.length > 0) { s = e(); i.each(function (t) { if (e(this).data("message-text") === n) { s = s.add(this) } }) } else { s = i } s.addClass("closing")[r ? "foldAndRemove" : "remove"](); if (s.length === i.length) { e(this).removeData("messages") } else { e(this).data("messages", i.not(s)) } } }); return this }; e.fn.message.defaults = { append: true, position: "top", arrow: false, node: "p", link: "#", classes: [], stripes: false, animatedStripes: true, darkStripes: true, stripesSize: "normal", simpler: false, closable: true, showCloseOnHover: true, animate: true, animateSpeed: "fast", groupSimilar: true, groupCount: true, inset: false, autoClose: false } })(jQuery)