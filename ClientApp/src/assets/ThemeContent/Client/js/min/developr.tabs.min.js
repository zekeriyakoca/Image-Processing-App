(function (e, t, n) { var r = e(t), i = e(n), s = false; i.on("click", ".tabs > li > a", function (t) { var n = e(this), r = n.parent(), i; if (!this.href || this.href.indexOf("#") < 0) { return } t.preventDefault(); if (r.hasClass("disabled")) { return } r.addClass("active").closest(".standard-tabs, .swipe-tabs, .side-tabs").addClass("tabs-animated tab-opened"); i = r.siblings(".active").removeClass("active"); n.refreshTabs() }); e.fn.refreshInnerTabs = function () { e(this.find(".standard-tabs, .swipe-tabs, .side-tabs").get().reverse()).refreshTabs(); return this }; e.fn.refreshTabs = function () { var t = e(), n; this.each(function (n) { var r = e(this).closest(".standard-tabs, .swipe-tabs, .side-tabs"), i = r.children(".tabs"), s = i.children().children('a[href^="#"]'), o = s.parent(), u = r.children(".tabs-content"), a = u.children(".tabs-back"), f, l, c, h = false, p, d = e(), v = false, m = [], g = 0, y; if (e.template.ie7) { s = e(); i.children().children("a").each(function (e) { if (this.href.indexOf("#") > -1) { s = s.add(this) } }); o = s.parent() } if (r.length === 0 || i.length === 0 || s.length === 0 || u.length === 0) { return } t = t.add(r); if (a.length === 0) { a = e('<span class="tabs-back with-left-arrow top-bevel-on-light dark-text-bevel">Back</span>').prependTo(u).click(function (e) { var t = u.children(".tab-active:first").children(".inner-tabs.tab-opened"), n; if (t.length > 0) { n = t.children(".tabs-content").children(".tabs-back"); if (n.length > 0) { n.click(); return } } r.removeClass("tab-opened"); r.height(i.outerHeight()) }).applySetup(true, true) } f = r.tempShow(); l = r.hasClass("same-height"); if (l) { r.css("min-height", r.height() + "px") } c = o.filter(".active:first"); if (c.length === 0) { c = o.not(".disabled").first() } if (c.length > 0) { p = c.addClass("active").children("a").attr("href"); h = p.substring(p.indexOf("#") + 1) } s.each(function (t) { var n = this.href, r = e(n.substring(n.indexOf("#"))), i, s; if (r.length > 0) { d = d.add(r.show()); if (l) { s = r.css("height", "").outerHeight(); i = Math.min(0, r.children(":first").parseCSSValue("margin-top")); g = Math.max(g, s + i); m[t] = [s, i] } } }); if (l) { d.each(function (t) { var n = e(this), r = m[t][0], i = m[t][1]; n.height(g - (r - n.height()) - i) }) } d.each(function (t) { var n = e(this), r = n.hasClass("tab-active"); if (this.id != h) { if (r) { n.removeClass("tab-active").trigger("hidetab") } n.hide() } else if (!r) { v = n.addClass("tab-active") } }); if (v) { if (!v.data("tabshown")) { v.trigger("showtabinit"); v.data("tabshown", true) } v.trigger("showtab") } y = i.height(); u.css("min-height", y - 1); if (r.hasClass("side-tabs")) { r[u.height() === y - 1 ? "addClass" : "removeClass"]("tabs-fullheight") } r.height(r.hasClass("tab-opened") ? u.outerHeight() : y); if (l) { r.css("min-height", "") } f.tempShowRevert() }); if (!s) { n = t.parent().closest(".standard-tabs, .swipe-tabs, .side-tabs").filter(".same-height").not(t); if (n.length > 0) { n.refreshTabs() } } return this }; e.fn.addTab = function (t, n, r, i) { this.each(function (s) { var o = e(this).closest(".standard-tabs, .swipe-tabs, .side-tabs"), u = o.children(".tabs"), a = o.children(".tabs-content"); if (o.length === 0 || u.length === 0 || a.length === 0) { return } e('<li><a href="#' + t + '">' + n + "</a></li>").appendTo(u).prev().removeClass("last-child"); a.append('<div id="' + t + '"' + (i ? "" : ' class="with-padding"') + ">" + r + "</div>"); o.refreshTabs() }); return this }; e.fn.removeTab = function () { this.each(function (t) { var n = e(this), r = n.closest(".tabs, .tabs-content"), i = r.hasClass("tabs"), s = r.closest(".standard-tabs, .swipe-tabs, .side-tabs"), o; if (r.length === 0 || s.length === 0) { return } if (i) { n = n.is("a") ? n : n.children("a"); o = n.attr("href"); if (n.length === 0 || o.indexOf("#") < 0) { return } e(o.substring(o.indexOf("#"))).remove(); if (e.template.ie7) { n.parent().prev().addClass("last-child") } n.parent().remove() } else { while (n.length > 0 && !n.parent().hasClass("tabs-content")) { n = n.parent() } if (e.template.ie7) { s.children(".tabs").children().children("a").each(function (t) { if (this.href.indexOf("#") > -1 && this.href.split("#")[1] == n.attr("id")) { e(this).parent().prev().addClass("last-child").next().remove() } }) } else { s.children(".tabs").find('a[href="#' + n.attr("id") + '"]').parent().remove() } n.remove() } s.refreshTabs() }); return this }; e.fn.showTab = function () { this.each(function (t) { var n = e(this), r = n.closest(".tabs-content"), i; if (r.length === 0) { return } i = n.parent().hasClass("tabs-content") ? n : n.parentsUntil(r).last(); e('a[href="#' + i[0].id + '"]').click() }); return this }; e.template.addSetupFunction(function (t, n) { s = true; e(this.findIn(t, n, ".standard-tabs, .swipe-tabs, .side-tabs").get().reverse()).addClass("tabs-active").refreshTabs(); s = false; return this }); r.on("normalized-resize", function (t) { e(e(".standard-tabs, .swipe-tabs, .side-tabs").get().reverse()).refreshTabs() }) })(jQuery, window, document)