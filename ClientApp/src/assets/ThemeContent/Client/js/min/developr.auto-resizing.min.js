(function (e, t, n) { function o(t) { var n = t.css("box-sizing") === "border-box" || t.css("-webkit-box-sizing") === "border-box" || t.css("-moz-box-sizing") === "border-box", r = n ? "padding-bottom:" + (t.parseCSSValue("padding-top") + t.parseCSSValue("padding-bottom")) + "px; " : "", i = 8; return e('<pre style="position: absolute; ' + "top:0; " + "left:0; " + "padding:0; " + "visibility:hidden; " + r + "width:" + (t.width() - i) + "px; " + "font-size:" + t.css("font-size") + "; " + "font-family:" + t.css("font-family") + "; " + "line-height:" + t.css("line-height") + "; " + "min-height:" + t.css("line-height") + "; " + "letter-spacing:" + t.css("letter-spacing") + "; " + '">' + u(t.val()) + "</pre>").appendTo(s) } function u(e) { if (/^[\r\n]/.test(e)) { e = " " + e } if (/[\r\n]$/.test(e)) { e += " " } return e } function a() { var t = e(this).css({ overflow: "hidden", resize: "none" }), n = o(t); t.height(n.innerHeight() + "px"); n.remove() } var r = e(t), i = e(n), s = e(n.body); e.template.addSetupFunction(function (e, t) { var n = this.findIn(e, t, "textarea.autoexpanding").widthchange(a); setTimeout(function () { n.each(a) }, 40); return this }); i.on("focus", "textarea.autoexpanding", function () { var t = e(this), n = o(t), r = function () { if (e.template.ie7) { n.remove(); n = o(t) } else { n.text(u(t.val())) } t.height(n.innerHeight() + "px") }, i = function () { n.remove(); t.off(this.addEventListener ? "input" : "keyup", r).off("blur", i) }; t.on("input keyup", r).on("blur", i) }); i.on("jsautoexpand", "textarea", function () { a.call(this) }) })(jQuery, window, document)