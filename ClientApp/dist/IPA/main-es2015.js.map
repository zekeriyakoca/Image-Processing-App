{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Core/Authentication/jwt.service.ts","./src/app/Core/Authentication/user.service.ts","./src/app/Core/Guards/Auth/auth.guard.service.ts","./src/app/Core/Interceptors/backend-interpretter.interceptor.ts","./src/app/Core/Layout/app-footer/app-footer.component.ts","./src/app/Core/Layout/app-header/app-header.component.ts","./src/app/Core/Resolvers/data-init-resolver.service.ts","./src/app/Core/Resolvers/redirection-resolver.service.ts","./src/app/Core/Services/api.service.ts","./src/app/Core/Services/core.service.ts","./src/app/Core/Services/dom.service.ts","./src/app/Core/Services/globalErrorHandler.service.ts","./src/app/Core/Services/logger.service.ts","./src/app/Core/Services/modal.service.ts","./src/app/Core/core.module.ts","./src/app/Core/loweCaseUrlSerializer.ts","./src/app/Modules/Home/home.module.ts","./src/app/Modules/Home/pages/home/home.component.html","./src/app/Modules/Home/pages/home/home.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/main/main.component.html","./src/app/main/main.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./Modules/Home/home.module.ngfactory\": [\n\t\t\"./src/app/Modules/Home/home.module.ngfactory.js\",\n\t\t\"Modules-Home-home-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class JwtService {\r\n\r\n  getToken(): String {\r\n    return window.localStorage['jwtToken'];\r\n  }\r\n\r\n  saveToken(token: String) {\r\n    window.localStorage['jwtToken'] = token;\r\n  }\r\n\r\n  destroyToken() {\r\n    window.localStorage.removeItem('jwtToken');\r\n  }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject, ReplaySubject, of } from \"rxjs\";\r\n\r\nimport { User } from \"../../Shared/Models/Authentication/User\";\r\nimport { map, distinctUntilChanged } from \"rxjs/operators\";\r\nimport { ApiService } from '../Services/api.service';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class UserService {\r\n  private currentUserSubject = new BehaviorSubject<User>({} as User);\r\n  public currentUser = this.currentUserSubject\r\n    .asObservable()\r\n    .pipe(distinctUntilChanged());\r\n\r\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\r\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  populate() {\r\n    this.apiService.post(\"/Account/GetCurrentUser\", null).pipe(\r\n      map(\r\n        data => {\r\n          if (data !== null) {\r\n            this.setAuth(data.user);\r\n          } else {\r\n            this.purgeAuth();\r\n          }\r\n        },\r\n        err => this.purgeAuth()\r\n      )\r\n    );\r\n  }\r\n\r\n  setAuth(user: User) {\r\n    this.currentUserSubject.next(user);\r\n    this.isAuthenticatedSubject.next(true);\r\n  }\r\n\r\n  purgeAuth() {\r\n    this.currentUserSubject.next({} as User);\r\n    this.isAuthenticatedSubject.next(false);\r\n  }\r\n\r\n  attemptAuth(): Observable<Boolean> {\r\n    //Bypassing Authentication.\r\n    return of(true);\r\n    \r\n    //Code not removed for future use\r\n    return this.apiService.post(\"/Account/GetCurrentUser\", null).pipe(\r\n      map(\r\n        user => {\r\n          \r\n          if (user !== null) {\r\n            this.setAuth(user);\r\n            return true\r\n          } else {\r\n            this.navigateToMainApp(\"/Account/Logon\");\r\n            return false;\r\n          }\r\n        },\r\n        error => {\r\n          this.navigateToMainApp(\"/Account/Logon\");\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getCurrentUser(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  private navigateToMainApp(url:string){\r\n    if(typeof url!='undefined'&& url ){\r\n      window.location.href =  environment.mainAppBaseUrl + url\r\n    }\r\n    window.location.href = environment.mainAppBaseUrl;\r\n  }\r\n}\r\n","import { UserService } from './../../Authentication/user.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService:UserService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n\n    return this.userService.isAuthenticated.pipe(take(1));\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BackendInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    // const headersConfig = request.headers.set('Content-Type','application/json').set('Accept', 'application/json')\r\n    // .set('credentials', 'same-origin').set('withCredentials', 'true')\r\n    // const headersConfig = {\r\n    //   'Content-Type': 'application/json',\r\n    //   'Accept': 'application/json',\r\n    //   'credentials': 'same-origin',\r\n    //   'withCredentials' : 'true'\r\n    // };\r\n    // var newRequest = request.clone({headers :headersConfig});\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './app-footer.component.html',\r\n  styleUrls: ['./app-footer.component.scss']\r\n})\r\nexport class AppFooterComponent implements OnInit {\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, AfterContentInit, AfterViewInit, AfterViewChecked } from '@angular/core';\r\nimport { User } from 'src/app/Shared/Models/Authentication/User';\r\nimport { UserService } from '../../Authentication/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { CoreService } from '../../Services/core.service';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { NotFoundComponent } from '../../Pages/NotFound/NotFound.component';\r\nimport { ModalService } from '../../Services/modal.service';\r\n\r\ndeclare const window: any;\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './app-header.component.html',\r\n  styleUrls: ['./app-header.component.scss']\r\n})\r\nexport class AppHeaderComponent implements OnInit , AfterViewChecked{\r\n \r\n\r\n  public mainLogoPath:Observable<string>;\r\n  constructor(public userService:UserService, public coreService:CoreService, public modalService:ModalService) { \r\n    \r\n    this.mainLogoPath = of(\"../../../../assets/Images/logo-light.png\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  ngAfterViewChecked(): void {\r\n    let inputs = {\r\n      isMobile: false\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { CoreService } from '../Services/core.service';\r\nimport { UserService } from '../Authentication/user.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataInitResolver implements Resolve<any>{\r\n\r\n  constructor(private userService: UserService,\r\n    private coreService: CoreService) { }\r\n\r\n  resolve(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot) {\r\n    // console.error(\"route include corporate : \"+route.url[0].path.toLocaleLowerCase().includes(\"corporate\"));\r\n    return forkJoin(\r\n      {\r\n        isAuthenticated: this.userService.attemptAuth(),\r\n        isInitialDataFetched: this.coreService.fetchInitialInfo()\r\n      }).pipe(\r\n        map(results => results.isAuthenticated && results.isInitialDataFetched)\r\n      );\r\n  }\r\n\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class RedirectionResolver implements Resolve<any> {\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    var prefix = route.data[\"pathPrefix\"] || \"\" ;\r\n    window.location = environment.mainAppBaseUrl + prefix +route.url.join('/');\r\n    return of(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable ,  throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class ApiService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  private formatErrors(error: any) {\r\n    return  throwError(error.error);\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${environment.backEndUrl}${path}`, { params })\r\n      .pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  put(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(\r\n      `${environment.backEndUrl}${path}`,\r\n      JSON.stringify(body),\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  post(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.backEndUrl}${path}`,\r\n      JSON.stringify(body),\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  delete(path): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.backEndUrl}${path}`,\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ApiService } from \"../Services/api.service\";\r\nimport { Observable, BehaviorSubject, Subscription, of } from \"rxjs\";\r\nimport { take, map, distinctUntilChanged } from \"rxjs/operators\";\r\nimport { UserService } from '../Authentication/user.service';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CoreService {\r\n  private appVersion$: BehaviorSubject<string> = new BehaviorSubject(\"\");\r\n  public appVersion = this.appVersion$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private auths$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n  public auths = this.auths$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private initialDataFetched$: BehaviorSubject<Boolean> = new BehaviorSubject(false);\r\n  public initialDataFetched = this.initialDataFetched$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private apiService: ApiService,\r\n  private userService:UserService) {}\r\n\r\n  getVersion() {\r\n    return this.appVersion$.asObservable();\r\n  }\r\n\r\n  getAuths() {\r\n    return this.auths$.asObservable();\r\n  }\r\n\r\n  fetchInitialInfo(): Observable<Boolean> {\r\n    //bypassing data initialization\r\n    return of(true);\r\n\r\n    // Code not removed for later usage\r\n    return this.apiService.post(\"Corporate/Dbs/GetInitialInfo\", {}).pipe(\r\n      take(1),\r\n      map(\r\n        data => {\r\n          if (data == null) return false;\r\n          this.appVersion$.next(data.AppVersion);\r\n          this.auths$.next(data.Auths);\r\n          this.checkIfInitialDataFetched();\r\n          return true;\r\n        },\r\n        error => {\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n  }\r\n  private checkIfInitialDataFetched(){\r\n    if(this.appVersion$.value && this.auths && this.userService.currentUser)\r\n    this.initialDataFetched$.next(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(item => {\r\n      item.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","import {\n  Injectable,\n  Injector,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  ApplicationRef\n} from '@angular/core';\n\n@Injectable()\nexport class DomService {\n\n  private childComponentRef:any;\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) { }\n\n  public appendComponentTo(parentId: string, child: any, childConfig?: childConfig) {\n    // Create a component reference from the component \n    const childComponentRef = this.componentFactoryResolver\n      .resolveComponentFactory(child)\n      .create(this.injector);\n\n    // Attach the config to the child (inputs and outputs)\n    this.attachConfig(childConfig, childComponentRef);\n\n    this.childComponentRef = childComponentRef;\n    // Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(childComponentRef.hostView);\n\n    // Get DOM element from component\n    const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    // Append DOM element to the body\n    document.getElementById(parentId).appendChild(childDomElem);\n\n  }\n\n  public  removeComponent() {\n    this.appRef.detachView(this.childComponentRef.hostView);\n    this.childComponentRef.destroy();\n  }\n\n\n  private attachConfig(config, componentRef){\n    let inputs = config.inputs;\n    let outputs = config.outputs;\n    for(var key in inputs){\n      componentRef.instance[key] = inputs[key];\n    }\n    for(var key in outputs){\n      componentRef.instance[key] = outputs[key];\n    }\n    \n  }\n}\ninterface childConfig{\n  inputs:object,\n  outputs:object\n}","import { ErrorHandler, Injectable, Injector} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector) { }\n  handleError(error) {\n    // const router = this.injector.get(Router);\n    \n    //We need to redirect to error page here.\n    console.error(error);\n    // console.error(\"ERROR :\"+error);\n  }\n  \n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DomService } from './dom.service';\r\n\r\n@Injectable()\r\nexport class ModalService {\r\n\r\n  constructor(private domService: DomService) { }\r\n\r\n  private modalElementId = 'modal-container';\r\n  private overlayElementId = 'overlay';\r\n\r\n  init(component: any, inputs: object, outputs: object) {\r\n    let componentConfig = {\r\n      inputs:inputs,\r\n      outputs:outputs\r\n    }\r\n    this.domService.appendComponentTo(this.modalElementId, component, componentConfig);\r\n    document.getElementById(this.modalElementId).className = 'show';\r\n    document.getElementById(this.overlayElementId).className = 'show';\r\n  }\r\n\r\n  destroy() {\r\n    this.domService.removeComponent();\r\n    document.getElementById(this.modalElementId).className = 'hidden';\r\n    document.getElementById(this.overlayElementId).className = 'hidden';\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AppHeaderComponent } from \"./Layout/app-header/app-header.component\";\r\nimport { AppFooterComponent } from \"./Layout/app-footer/app-footer.component\";\r\nimport { UserService } from './Authentication/user.service';\r\nimport { JwtService } from './Authentication/jwt.service';\r\nimport { ApiService } from './Services/api.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BackendInterceptor } from './Interceptors/backend-interpretter.interceptor';\r\nimport { CoreService } from './Services/core.service';\r\nimport { AuthGuard } from \"./Guards/Auth/auth.guard.service\";\r\nimport { RedirectionResolver } from \"./Resolvers/redirection-resolver.service\";\r\nimport { DataInitResolver } from './Resolvers/data-init-resolver.service';\r\nimport { NotFoundComponent } from './Pages/NotFound/NotFound.component';\r\nimport { EmptyComponent } from './Pages/Empty/Empty.component';\r\nimport { DomService } from './Services/dom.service';\r\nimport { ModalService } from './Services/modal.service';\r\nimport { LoggerService } from './Services/logger.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppHeaderComponent, AppFooterComponent, NotFoundComponent, EmptyComponent],\r\n  imports: [CommonModule, HttpClientModule],\r\n  exports: [AppHeaderComponent, AppFooterComponent],\r\n  providers: [ApiService, JwtService, UserService, CoreService, AuthGuard, RedirectionResolver, DataInitResolver, DomService, ModalService, LoggerService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: BackendInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { DefaultUrlSerializer, UrlTree } from '@angular/router';\r\n\r\nexport class LowerCaseUrlSerializer extends DefaultUrlSerializer {\r\n    parse(url: string): UrlTree {\r\n    return super.parse(url.toLowerCase()); \r\n    }\r\n}","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeRoutes } from './home.routing';\r\nimport { HomeComponent } from './pages/home/home.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(HomeRoutes),\r\n\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","<p>home-page works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { AppRoutes } from './app-routes';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(AppRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'IPA';\r\n  \r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CoreModule } from './Core/core.module';\r\nimport { HomeModule } from './Modules/Home/home.module';\r\nimport { GlobalErrorHandler } from './Core/Services/globalErrorHandler.service';\r\nimport { UrlSerializer } from '@angular/router';\r\nimport { LowerCaseUrlSerializer } from './Core/loweCaseUrlSerializer';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    HomeModule\r\n  ],\r\n  providers: [{\r\n    provide: ErrorHandler,\r\n    useClass: GlobalErrorHandler\r\n  },\r\n  {\r\n    provide: UrlSerializer,\r\n    useClass: LowerCaseUrlSerializer\r\n}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"app-body\">\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n    <app-footer></app-footer>\r\n</div>\r\n<!-- Custom modal setup -->\r\n<div id=\"modal-container\" class=\"hidden\"></div>\r\n<div id=\"overlay\" (click)=\"removeModal()\" class=\"hidden\"></div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title, Meta } from \"@angular/platform-browser\";\r\nimport { NavigationEnd, Router, ActivatedRoute } from \"@angular/router\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { UserService } from \"../Core/Authentication/user.service\";\r\nimport { User } from \"../Shared/Models/Authentication/User\";\r\nimport { forkJoin } from \"rxjs\";\r\nimport { CoreService } from \"../Core/Services/core.service\";\r\nimport { ModalService } from '../Core/Services/modal.service';\r\n\r\n@Component({\r\n  selector: \"app-main\",\r\n  templateUrl: \"./main.component.html\",\r\n  styleUrls: [\"./main.component.scss\"]\r\n})\r\nexport class MainComponent implements OnInit {\r\n  currentUrl: string;\r\n  appVersion: string;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public modalService:ModalService,\r\n    meta: Meta,\r\n    title: Title\r\n  ) {\r\n    title.setTitle(\"Image Processing\");\r\n    this.appVersion = \"1.1\";\r\n\r\n    meta.addTags([\r\n      { name: \"author\", content: \"\" },\r\n      { name: \"keywords\", content: \" \" },\r\n      { name: \"description\", content: \"\" }\r\n    ]);\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.currentUrl = event.url;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  removeModal(){\r\n    this.modalService.destroy();\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  backEndUrl: 'http://localhost:62119/',\r\n  mainAppBaseUrl : 'http://localhost:62119/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}