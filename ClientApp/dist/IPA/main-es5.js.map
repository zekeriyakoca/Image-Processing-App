{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/Core/Authentication/jwt.service.ts","src/app/Core/Authentication/user.service.ts","src/app/Core/Guards/Auth/auth.guard.service.ts","src/app/Core/Interceptors/backend-interpretter.interceptor.ts","src/app/Core/Layout/app-footer/app-footer.component.ts","src/app/Core/Layout/app-header/app-header.component.html","src/app/Core/Layout/app-header/app-header.component.ts","src/app/Core/Resolvers/data-init-resolver.service.ts","src/app/Core/Resolvers/redirection-resolver.service.ts","src/app/Core/Services/Messaging.service.ts","src/app/Core/Services/api.service.ts","src/app/Core/Services/core.service.ts","src/app/Core/Services/dom.service.ts","src/app/Core/Services/globalErrorHandler.service.ts","src/app/Core/Services/logger.service.ts","src/app/Core/Services/modal.service.ts","src/app/Core/core.module.ts","src/app/Core/loweCaseUrlSerializer.ts","src/app/Global/Global.module.ts","src/app/Global/Uploader/Uploader.component.html","src/app/Global/Uploader/Uploader.component.ts","src/app/Modules/Home/home.module.ts","src/app/Modules/Home/pages/home/home.component.html","src/app/Modules/Home/pages/home/home.component.ts","src/app/app-routing.module.ts","src/app/app.component.html","src/app/app.component.ts","src/app/app.module.ts","src/app/main/main.component.html","src/app/main/main.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["var map = {\n\t\"./Modules/Home/home.module.ngfactory\": [\n\t\t\"./src/app/Modules/Home/home.module.ngfactory.js\",\n\t\t\"Modules-Home-home-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class JwtService {\r\n\r\n  getToken(): String {\r\n    return window.localStorage['jwtToken'];\r\n  }\r\n\r\n  saveToken(token: String) {\r\n    window.localStorage['jwtToken'] = token;\r\n  }\r\n\r\n  destroyToken() {\r\n    window.localStorage.removeItem('jwtToken');\r\n  }\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject, ReplaySubject, of } from \"rxjs\";\r\n\r\nimport { User } from \"../../Shared/Models/Authentication/User\";\r\nimport { map, distinctUntilChanged } from \"rxjs/operators\";\r\nimport { ApiService } from '../Services/api.service';\r\nimport { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class UserService {\r\n  private currentUserSubject = new BehaviorSubject<User>({} as User);\r\n  public currentUser = this.currentUserSubject\r\n    .asObservable()\r\n    .pipe(distinctUntilChanged());\r\n\r\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\r\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\r\n\r\n  constructor(\r\n    private apiService: ApiService\r\n  ) {}\r\n\r\n  populate() {\r\n    this.apiService.post(\"/Account/GetCurrentUser\", null).pipe(\r\n      map(\r\n        data => {\r\n          if (data !== null) {\r\n            this.setAuth(data.user);\r\n          } else {\r\n            this.purgeAuth();\r\n          }\r\n        },\r\n        err => this.purgeAuth()\r\n      )\r\n    );\r\n  }\r\n\r\n  setAuth(user: User) {\r\n    this.currentUserSubject.next(user);\r\n    this.isAuthenticatedSubject.next(true);\r\n  }\r\n\r\n  purgeAuth() {\r\n    this.currentUserSubject.next({} as User);\r\n    this.isAuthenticatedSubject.next(false);\r\n  }\r\n\r\n  attemptAuth(): Observable<Boolean> {\r\n    //Bypassing Authentication.\r\n    return of(true);\r\n    \r\n    //Code not removed for future use\r\n    return this.apiService.post(\"/Account/GetCurrentUser\", null).pipe(\r\n      map(\r\n        user => {\r\n          \r\n          if (user !== null) {\r\n            this.setAuth(user);\r\n            return true\r\n          } else {\r\n            this.navigateToMainApp(\"/Account/Logon\");\r\n            return false;\r\n          }\r\n        },\r\n        error => {\r\n          this.navigateToMainApp(\"/Account/Logon\");\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getCurrentUser(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  private navigateToMainApp(url:string){\r\n    if(typeof url!='undefined'&& url ){\r\n      window.location.href =  environment.mainAppBaseUrl + url\r\n    }\r\n    window.location.href = environment.mainAppBaseUrl;\r\n  }\r\n}\r\n","import { UserService } from './../../Authentication/user.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private userService:UserService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n\n    return this.userService.isAuthenticated.pipe(take(1));\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BackendInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    // const headersConfig = request.headers.set('Content-Type','application/json').set('Accept', 'application/json')\r\n    // .set('credentials', 'same-origin').set('withCredentials', 'true')\r\n    // const headersConfig = {\r\n    //   'Content-Type': 'application/json',\r\n    //   'Accept': 'application/json',\r\n    //   'credentials': 'same-origin',\r\n    //   'withCredentials' : 'true'\r\n    // };\r\n    // var newRequest = request.clone({headers :headersConfig});\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './app-footer.component.html',\r\n  styleUrls: ['./app-footer.component.scss']\r\n})\r\nexport class AppFooterComponent implements OnInit {\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary py-0 px-0 mb-0\">\r\n\t<a class=\"navbar-brand py-0 px-3\" href=\"#\" >\r\n\t\t<img height=\"50px\" [src]=\"mainLogoPath|async\" />\r\n  </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\"\r\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Image Processing</a>\r\n      </li>\r\n      \r\n    </ul>\r\n    <div class=\"float-right pr-3\">\r\n      <span class=\"navbar-text text-white\">\r\n\r\n       \r\n      </span>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit, AfterContentInit, AfterViewInit, AfterViewChecked } from '@angular/core';\r\nimport { User } from 'src/app/Shared/Models/Authentication/User';\r\nimport { UserService } from '../../Authentication/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { CoreService } from '../../Services/core.service';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { NotFoundComponent } from '../../Pages/NotFound/NotFound.component';\r\nimport { ModalService } from '../../Services/modal.service';\r\n\r\ndeclare const window: any;\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './app-header.component.html',\r\n  styleUrls: ['./app-header.component.scss']\r\n})\r\nexport class AppHeaderComponent implements OnInit , AfterViewChecked{\r\n \r\n\r\n  public mainLogoPath:Observable<string>;\r\n  constructor(public userService:UserService, public coreService:CoreService, public modalService:ModalService) { \r\n    \r\n    this.mainLogoPath = of(\"../../../../assets/Images/logo-light.png\");\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  ngAfterViewChecked(): void {\r\n    let inputs = {\r\n      isMobile: false\r\n    }\r\n   \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { CoreService } from '../Services/core.service';\r\nimport { UserService } from '../Authentication/user.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataInitResolver implements Resolve<any>{\r\n\r\n  constructor(private userService: UserService,\r\n    private coreService: CoreService) { }\r\n\r\n  resolve(route: import(\"@angular/router\").ActivatedRouteSnapshot, state: import(\"@angular/router\").RouterStateSnapshot) {\r\n    // console.error(\"route include corporate : \"+route.url[0].path.toLocaleLowerCase().includes(\"corporate\"));\r\n    return forkJoin(\r\n      {\r\n        isAuthenticated: this.userService.attemptAuth(),\r\n        isInitialDataFetched: this.coreService.fetchInitialInfo()\r\n      }).pipe(\r\n        map(results => results.isAuthenticated && results.isInitialDataFetched)\r\n      );\r\n  }\r\n\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class RedirectionResolver implements Resolve<any> {\r\n  constructor(\r\n    private router: Router,\r\n  ) { }\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> {\r\n\r\n    var prefix = route.data[\"pathPrefix\"] || \"\" ;\r\n    window.location = environment.mainAppBaseUrl + prefix +route.url.join('/');\r\n    return of(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n\nconstructor(private fireMessaging:AngularFireMessaging) { \n  this.fireMessaging.messaging.subscribe(\n    (messagingContext) => {\n      messagingContext.onMessage = messagingContext.onMessage.bind(messagingContext);\n      messagingContext.onTokenRefresh = messagingContext.onTokenRefresh.bind(messagingContext);\n    }\n  );\n}\n\nrequestPermission = () => this.fireMessaging.requestToken;\n\nreceiveMessage = () => this.fireMessaging.messages;\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable ,  throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root', })\r\nexport class ApiService {\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  private formatErrors(error: any) {\r\n    return  throwError(error.error);\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${environment.backEndUrl}${path}`, { params })\r\n      .pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  put(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(\r\n      `${environment.backEndUrl}${path}`,\r\n      JSON.stringify(body),\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  post(path: string, body: Object = {}): Observable<any> {\r\n    return this.http.post(\r\n      `${environment.backEndUrl}${path}`,\r\n      JSON.stringify(body),\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  delete(path): Observable<any> {\r\n    return this.http.delete(\r\n      `${environment.backEndUrl}${path}`,\r\n      {withCredentials : true}\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ApiService } from \"../Services/api.service\";\r\nimport { Observable, BehaviorSubject, Subscription, of } from \"rxjs\";\r\nimport { take, map, distinctUntilChanged } from \"rxjs/operators\";\r\nimport { UserService } from '../Authentication/user.service';\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CoreService {\r\n  private appVersion$: BehaviorSubject<string> = new BehaviorSubject(\"\");\r\n  public appVersion = this.appVersion$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private auths$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n  public auths = this.auths$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private initialDataFetched$: BehaviorSubject<Boolean> = new BehaviorSubject(false);\r\n  public initialDataFetched = this.initialDataFetched$.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private apiService: ApiService,\r\n  private userService:UserService) {}\r\n\r\n  getVersion() {\r\n    return this.appVersion$.asObservable();\r\n  }\r\n\r\n  getAuths() {\r\n    return this.auths$.asObservable();\r\n  }\r\n\r\n  fetchInitialInfo(): Observable<Boolean> {\r\n    //bypassing data initialization\r\n    return of(true);\r\n\r\n    // Code not removed for later usage\r\n    return this.apiService.post(\"Corporate/Dbs/GetInitialInfo\", {}).pipe(\r\n      take(1),\r\n      map(\r\n        data => {\r\n          if (data == null) return false;\r\n          this.appVersion$.next(data.AppVersion);\r\n          this.auths$.next(data.Auths);\r\n          this.checkIfInitialDataFetched();\r\n          return true;\r\n        },\r\n        error => {\r\n          return false;\r\n        }\r\n      )\r\n    );\r\n  }\r\n  private checkIfInitialDataFetched(){\r\n    if(this.appVersion$.value && this.auths && this.userService.currentUser)\r\n    this.initialDataFetched$.next(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(item => {\r\n      item.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","import {\n  Injectable,\n  Injector,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  ApplicationRef\n} from '@angular/core';\n\n@Injectable()\nexport class DomService {\n\n  private childComponentRef:any;\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) { }\n\n  public appendComponentTo(parentId: string, child: any, childConfig?: childConfig) {\n    // Create a component reference from the component \n    const childComponentRef = this.componentFactoryResolver\n      .resolveComponentFactory(child)\n      .create(this.injector);\n\n    // Attach the config to the child (inputs and outputs)\n    this.attachConfig(childConfig, childComponentRef);\n\n    this.childComponentRef = childComponentRef;\n    // Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(childComponentRef.hostView);\n\n    // Get DOM element from component\n    const childDomElem = (childComponentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    // Append DOM element to the body\n    document.getElementById(parentId).appendChild(childDomElem);\n\n  }\n\n  public  removeComponent() {\n    this.appRef.detachView(this.childComponentRef.hostView);\n    this.childComponentRef.destroy();\n  }\n\n\n  private attachConfig(config, componentRef){\n    let inputs = config.inputs;\n    let outputs = config.outputs;\n    for(var key in inputs){\n      componentRef.instance[key] = inputs[key];\n    }\n    for(var key in outputs){\n      componentRef.instance[key] = outputs[key];\n    }\n    \n  }\n}\ninterface childConfig{\n  inputs:object,\n  outputs:object\n}","import { ErrorHandler, Injectable, Injector} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  constructor(private injector: Injector) { }\n  handleError(error) {\n    // const router = this.injector.get(Router);\n    \n    //We need to redirect to error page here.\n    console.error(error);\n    // console.error(\"ERROR :\"+error);\n  }\n  \n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DomService } from './dom.service';\r\n\r\n@Injectable()\r\nexport class ModalService {\r\n\r\n  constructor(private domService: DomService) { }\r\n\r\n  private modalElementId = 'modal-container';\r\n  private overlayElementId = 'overlay';\r\n\r\n  init(component: any, inputs: object, outputs: object) {\r\n    let componentConfig = {\r\n      inputs:inputs,\r\n      outputs:outputs\r\n    }\r\n    this.domService.appendComponentTo(this.modalElementId, component, componentConfig);\r\n    document.getElementById(this.modalElementId).className = 'show';\r\n    document.getElementById(this.overlayElementId).className = 'show';\r\n  }\r\n\r\n  destroy() {\r\n    this.domService.removeComponent();\r\n    document.getElementById(this.modalElementId).className = 'hidden';\r\n    document.getElementById(this.overlayElementId).className = 'hidden';\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { AngularFireMessagingModule  } from '@angular/fire/messaging';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AppHeaderComponent } from \"./Layout/app-header/app-header.component\";\r\nimport { AppFooterComponent } from \"./Layout/app-footer/app-footer.component\";\r\nimport { UserService } from \"./Authentication/user.service\";\r\nimport { JwtService } from \"./Authentication/jwt.service\";\r\nimport { ApiService } from \"./Services/api.service\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { BackendInterceptor } from \"./Interceptors/backend-interpretter.interceptor\";\r\nimport { CoreService } from \"./Services/core.service\";\r\nimport { AuthGuard } from \"./Guards/Auth/auth.guard.service\";\r\nimport { RedirectionResolver } from \"./Resolvers/redirection-resolver.service\";\r\nimport { DataInitResolver } from \"./Resolvers/data-init-resolver.service\";\r\nimport { NotFoundComponent } from \"./Pages/NotFound/NotFound.component\";\r\nimport { EmptyComponent } from \"./Pages/Empty/Empty.component\";\r\nimport { DomService } from \"./Services/dom.service\";\r\nimport { ModalService } from \"./Services/modal.service\";\r\nimport { LoggerService } from \"./Services/logger.service\";\r\nimport { MessagingService } from './Services/Messaging.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppHeaderComponent,\r\n    AppFooterComponent,\r\n    NotFoundComponent,\r\n    EmptyComponent\r\n  ],\r\n  imports: [CommonModule, HttpClientModule,AngularFireMessagingModule],\r\n  exports: [AppHeaderComponent, AppFooterComponent],\r\n  providers: [\r\n    ApiService,\r\n    JwtService,\r\n    UserService,\r\n    CoreService,\r\n    AuthGuard,\r\n    RedirectionResolver,\r\n    DataInitResolver,\r\n    DomService,\r\n    ModalService,\r\n    LoggerService,\r\n    MessagingService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: BackendInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class CoreModule {}\r\n","import { DefaultUrlSerializer, UrlTree } from '@angular/router';\r\n\r\nexport class LowerCaseUrlSerializer extends DefaultUrlSerializer {\r\n    parse(url: string): UrlTree {\r\n    return super.parse(url.toLowerCase()); \r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploaderComponent } from './Uploader/Uploader.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule, \n    ReactiveFormsModule\n  ],\n  declarations: [UploaderComponent],\n  exports:[\n    UploaderComponent\n  ]\n})\nexport class GlobalModule { }\n","<div class=\"card\">\n  <img *ngIf=\"resultImageUrl\" src=\"{{resultImageUrl}}\" alt=\"\" class=\"image-preview\">\n  <div class=\"card-header\">Form</div>\n  <div class=\"card-body\">\n    <p>\n      Select Your File\n    </p>\n    <form novalidate [formGroup]=\"formImport\">\n      <div class=\"input-group mb-3\">\n\n        <div class=\"custom-file\">\n          <input type=\"file\" class=\"custom-file-input\" multiple formControlName=\"importFile\" id=\"importFile\"\n            (change)=\"onFileChange($event.target.files)\">\n          <label class=\"custom-file-label\" #labelImport for=\"importFile\"><i class=\"fas fa-search\"></i> Choose\n            file</label>\n            \n        </div>\n      </div>\n      <div class=\"input-group\">\n        <span class=\"upload\" *ngIf=\"progress > 0\">\n          {{progress}}%\n        </span>\n        <span class=\"upload\" *ngIf=\"message\">\n          {{message}}\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"import()\"><i class=\"fas fa-file-import\"></i>\n          Upload\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpEventType } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-Uploader',\r\n  templateUrl: './Uploader.component.html',\r\n  styleUrls: ['./Uploader.component.css']\r\n})\r\nexport class UploaderComponent {\r\n\r\n  @ViewChild('labelImport', { static: true })\r\n  labelImport: ElementRef;\r\n\r\n  formImport: FormGroup;\r\n  fileToUpload: File = null;\r\n  progress: number;\r\n  message: string;\r\n  resultImageUrl:string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.formImport = new FormGroup({\r\n      importFile: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n\r\n  onFileChange(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    if (this.fileToUpload.type.split('/')[0] !== 'image') {\r\n      alert(\"You can only upload image!\");\r\n      return;\r\n    }\r\n    this.labelImport.nativeElement.innerText = Array.from(files)\r\n      .map(f => f.name)\r\n      .join(', ');\r\n\r\n  }\r\n\r\n  import(): void {\r\n    if (this.fileToUpload == null) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', this.fileToUpload, this.fileToUpload.name);\r\n    const url = environment.backEndUrl + \"/api/image/process\";\r\n\r\n    this.http.post(url, formData, { reportProgress: true, observe: 'events' })\r\n      .subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total);\r\n        else if (event.type === HttpEventType.Response) {\r\n          var resultMessage = event.body.toString();\r\n          if(resultMessage.startsWith('http')){\r\n            this.resultImageUrl = resultMessage;\r\n            this.message= \"Your image is processed\";\r\n            return;\r\n          }\r\n          this.message = resultMessage;\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeRoutes } from './home.routing';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { GlobalModule } from 'src/app/Global/Global.module';\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(HomeRoutes),\r\n    GlobalModule\r\n\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","\r\n\r\n<div class=\"container\">\r\n    <app-Uploader></app-Uploader>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MessagingService } from 'src/app/Core/Services/Messaging.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public messagingService:MessagingService) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.messagingService.requestPermission().subscribe();\r\n    this.messagingService.receiveMessage().subscribe(payload =>{\r\n      console.error(JSON.stringify('test'))\r\n\r\n    })\r\n  }\r\n\r\n}\r\n","import { AppRoutes } from './app-routes';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(AppRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'IPA';\r\n  \r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CoreModule } from './Core/core.module';\r\nimport { HomeModule } from './Modules/Home/home.module';\r\nimport { GlobalErrorHandler } from './Core/Services/globalErrorHandler.service';\r\nimport { UrlSerializer } from '@angular/router';\r\nimport { LowerCaseUrlSerializer } from './Core/loweCaseUrlSerializer';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase,'imageProc'),\r\n    CoreModule,\r\n    HomeModule\r\n  ],\r\n  providers: [{\r\n    provide: ErrorHandler,\r\n    useClass: GlobalErrorHandler\r\n  },\r\n  {\r\n    provide: UrlSerializer,\r\n    useClass: LowerCaseUrlSerializer\r\n}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"app-body\">\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n    <app-footer></app-footer>\r\n</div>\r\n<!-- Custom modal setup -->\r\n<div id=\"modal-container\" class=\"hidden\"></div>\r\n<div id=\"overlay\" (click)=\"removeModal()\" class=\"hidden\"></div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title, Meta } from \"@angular/platform-browser\";\r\nimport { NavigationEnd, Router, ActivatedRoute } from \"@angular/router\";\r\nimport { take, tap } from \"rxjs/operators\";\r\nimport { UserService } from \"../Core/Authentication/user.service\";\r\nimport { User } from \"../Shared/Models/Authentication/User\";\r\nimport { forkJoin } from \"rxjs\";\r\nimport { CoreService } from \"../Core/Services/core.service\";\r\nimport { ModalService } from '../Core/Services/modal.service';\r\n\r\n@Component({\r\n  selector: \"app-main\",\r\n  templateUrl: \"./main.component.html\",\r\n  styleUrls: [\"./main.component.scss\"]\r\n})\r\nexport class MainComponent implements OnInit {\r\n  currentUrl: string;\r\n  appVersion: string;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public modalService:ModalService,\r\n    meta: Meta,\r\n    title: Title\r\n  ) {\r\n    title.setTitle(\"Image Processing\");\r\n    this.appVersion = \"1.1\";\r\n\r\n    meta.addTags([\r\n      { name: \"author\", content: \"\" },\r\n      { name: \"keywords\", content: \" \" },\r\n      { name: \"description\", content: \"\" }\r\n    ]);\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.currentUrl = event.url;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  removeModal(){\r\n    this.modalService.destroy();\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  backEndUrl: 'https://localhost:44372',\r\n  mainAppBaseUrl : 'http://localhost:62119/',\r\n  firebase:{\r\n    apiKey: \"AIzaSyDhVyh4zEobt49oneT5fi6ohlz3nqLvyhs\",\r\n    authDomain: \"imageproc-kodilist.firebaseapp.com\",\r\n    databaseURL: \"https://imageproc-kodilist.firebaseio.com\",\r\n    projectId: \"imageproc-kodilist\",\r\n    storageBucket: \"imageproc-kodilist.appspot.com\",\r\n    messagingSenderId: \"318349712429\",\r\n    appId: \"1:318349712429:web:f0b695db5c91e68b78aca4\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}