(function (e, t, n) { function u() { var t = e("#modals"); if (t.length === 0) { t = e('<div id="modals"></div>').appendTo(n.body); if (e.fn.enableFixedFallback) { t.enableFixedFallback() } } return t } function a(e) { e.preventDefault() } var r = e(t), i = e(n), s = e.template.viewportWidth, o = e.template.viewportHeight; r.on("normalized-resize orientationchange", function () { var t = s, n = o, r, i; s = e.template.viewportWidth; o = e.template.viewportHeight; r = Math.round((s - t) / 2); i = Math.round((o - n) / 2); e.modal.all.each(function (t) { var n = e(this), s = n.data("modal"), o, u; if (s) { o = n.outerWidth(); u = n.outerHeight(); s.updateMaxSizes(); s.setPosition(n.parseCSSValue("left") + r + Math.round((o - n.outerWidth()) / 2), n.parseCSSValue("top") + i + Math.round((u - n.outerHeight()) / 2)) } }) }); e.modal = function (t) { var n = e.extend({}, e.modal.defaults, t), r = u(), f, l, c, h, p = false, d = false, v = false, m, g, y, b = false, w, E = false, S, x = 0, T = 0, N = 0, C = 0, k = 0, L = 0, A, O, M, _, D, P = n.title ? "<h3>" + n.title + "</h3>" : "", H = n.titleBar || n.titleBar === null && P.length > 0 ? '<div class="modal-bar">' + P + "</div>" : "", B = [], j, F = "", I, q = function () { if (w) { if (S) { w.detach().insertAfter(S); S.remove() } if (E) { w.hide() } w = false; E = false; S = false } }, R = function (t) { var r; if (n.useIframe) { return } q(); h.empty(); if (typeof t !== "string") { w = t; t = '<span class="modal-dom-wrapper"></span>'; if (!w.is(":visible")) { E = true; w.show() } if (w.parent().length > 0) { S = e('<span style="display:none"></span>').insertBefore(w); w.detach() } } h.append(n.beforeContent + t + n.afterContent); if (w) { r = h.find(".modal-dom-wrapper"); w.insertAfter(r); r.remove() } }, U = function (t, r) { var i, s, o = {}; if (t === true && r === true) { return } if (n.useIframe) { if (typeof t === "number") { t = Math.min(t, m); h.css("width", t + "px"); p.prop("width", t) } if (typeof r === "number") { r = Math.min(r, g); h.css("height", r + "px"); p.prop("height", r) } } else { if (t !== true) { h.css({ width: t ? t + "px" : "" }); if (e.fn.refreshInnerTabs) { h.refreshInnerTabs() } if (n.resizeToFit) { i = h.prop("scrollWidth"); if (i > t) { h.css({ width: i + "px" }) } } } if (r !== true) { h.css({ height: r ? r + "px" : "" }) } if (n.resizeToFit) { s = h.prop("scrollHeight"); if (s > r) { h.css({ height: s + "px" }) } } } }, z = function (e, t, r) { f[r ? "animate" : "css"]({ left: Math.min(Math.max(n.maxSizeMargin, e), s - f.outerWidth() - n.maxSizeMargin), top: Math.min(Math.max(n.maxSizeMargin, t), o - f.outerHeight() - n.maxSizeMargin) }) }, W = function (t, r) { if (n.useIframe) { p.prop("src", t) } else { var i = e.extend({}, e.modal.defaults.ajax, r, { success: function (e, t, n) { R(e); if (i.resize || i.resizeOnLoad) { U(true, false) } if (r.success) { r.success.call(this, e, t, n) } } }); if (!i.error && i.errorMessage) { i.error = function (e, t, n) { R(i.errorMessage); if (i.resize || i.resizeOnMessage) { U(true, false) } } } if (i.loadingMessage) { R(i.loadingMessage); if (i.resize || i.resizeOnMessage) { U(true, false) } } e.ajax(t, i) } }, X = function (t) { var r; if (n.titleBar === false) { return } if (typeof t === "string" && t.length > 0) { if (!l) { l = e('<div class="modal-bar"><h3>' + t + "</h3></div>").prependTo(f); if (d) { d.detach().prependTo(l) } } else { r = l.children("h3"); if (r.length === 0) { r = e("<h3></h3>").appendTo(l) } r.html(t) } } else { if (l) { if (d) { d.detach().prependTo(f) } l.remove(); l = false } } }, V = function () { if (n.onClose) { if (n.onClose.call(f[0]) === false) { return } } if (b) { b.removeClass("visible") } f.stop(true).animate({ opacity: 0, marginTop: "-30px" }, 300, function () { if (w) { if (S) { w.detach().insertAfter(S); S.remove() } if (E) { w.hide() } } f.remove(); if (b) { b.remove(); if (r.children(".modal-blocker").length === 0) { r.removeClass("with-blocker"); if (e.fn.detectFixedBounds) { r.detectFixedBounds() } } } }); e.modal.all = f.siblings(".modal"); if (e.modal.all.length === 0) { e.modal.current = false } else { e.modal.current = e.modal.all.last() } }, J = function () { var e = s - 2 * n.maxSizeMargin - (f.outerWidth() - h.width()), t = o - 2 * n.maxSizeMargin - (f.outerHeight() - h.height()), r, i, u, a, l, c; m = n.maxWidth ? Math.min(n.maxWidth, e) : e; g = n.maxHeight ? Math.min(n.maxHeight, t) : t; if (n.useIframe) { u = parseInt(p.prop("width"), 10) || n.width; a = parseInt(p.prop("height"), 10) || n.height; l = Math.min(Math.max(u, n.width), m); c = Math.min(Math.max(a, n.height), g); h.css({ width: l + "px", height: c + "px" }); p.prop("width", l); p.prop("height", c) } else { r = n.minWidth ? Math.min(n.minWidth, e) : e; i = n.minHeight ? Math.min(n.minHeight, t) : t; h.css({ maxWidth: m + "px", maxHeight: g + "px", minWidth: r + "px", minHeight: i + "px" }) } }; if (n.blocker) { y = r.hasClass("with-blocker"); b = e('<div class="modal-blocker"></div>').appendTo(r.addClass("with-blocker")); if (!y && e.fn.detectFixedBounds) { r.detectFixedBounds() } if (n.blockerVisible) { b.addClass("visible") } b.click(function (t) { b.nextImmediates(".modal").each(function () { var t = e(this), n = t.data("modal"); if (n && n.closeOnBlur) { t.closeModal() } }) }) } if (n.useIframe) { if (!n.width) { n.width = n.maxWidth || n.minWidth || 120 } if (!n.height) { n.height = n.maxHeight || n.minHeight || 120 } I = n.scrolling === true ? "" : ' scrolling="' + (typeof n.scrolling === "string" ? n.scrolling : "no") + '"'; j = '<div style="width:' + n.width + "px; height:" + n.height + 'px; -webkit-overflow-scrolling:touch; overflow: auto;">' + '<iframe class="modal-iframe" src="' + (n.url || "") + '" frameborder="0" width="' + n.width + '" height="' + n.height + '"' + I + "></iframe>" + "</div>" } else { if (n.minWidth) { B.push("min-width:" + n.minWidth + "px;") } if (n.minHeight) { B.push("min-height:" + n.minHeight + "px;") } if (n.width) { B.push("width:" + n.width + "px;") } if (n.height) { B.push("height:" + n.height + "px;") } if (n.maxWidth) { B.push("max-width:" + n.maxWidth + "px;") } if (n.maxHeight) { B.push("max-height:" + n.maxHeight + "px;") } j = '<div class="modal-content' + (n.scrolling ? " modal-scroll" : "") + (n.contentAlign !== "left" ? " align-" + n.contentAlign : "") + '" style="' + B.join(" ") + '"></div>' } f = e('<div class="modal' + (n.classes ? " " + n.classes : "") + '"></div>').appendTo(r); l = H.length > 0 ? e(H).appendTo(f) : false; c = n.contentBg ? e('<div class="modal-bg"></div>').appendTo(f) : false; h = e(j).appendTo(c || f); if (n.useIframe) { p = h.children("iframe") } if (!n.useIframe && n.content) { R(n.content) } if (!n.useIframe && n.scrolling && e.fn.customScroll) { h.customScroll({ horizontal: n.horizontalScrolling }) } if (n.resizable) { O = function (e) { var t = e.pageX - k, r = e.pageY - L, i = Math.max(n.minWidth, N + A.width * t), s = Math.max(n.minHeight, C + A.height * r), o = 0, u = 0; if (n.maxWidth && i > n.maxWidth) { o = i - n.maxWidth; i = n.maxWidth } if (n.maxHeight && s > n.maxHeight) { u = s - n.maxHeight; s = n.maxHeight } U(i, s); z(x + A.left * (t + o), T + A.top * (r + u)) }; M = function (e) { i.off("mousemove", O).off("mouseup", M) }; e('<div class="modal-resize-nw"></div>').appendTo(f).data("modal-resize", { top: 1, left: 1, height: -1, width: -1 }).add(e('<div class="modal-resize-n"></div>').appendTo(f).data("modal-resize", { top: 1, left: 0, height: -1, width: 0 })).add(e('<div class="modal-resize-ne"></div>').appendTo(f).data("modal-resize", { top: 1, left: 0, height: -1, width: 1 })).add(e('<div class="modal-resize-e"></div>').appendTo(f).data("modal-resize", { top: 0, left: 0, height: 0, width: 1 })).add(e('<div class="modal-resize-se"></div>').appendTo(f).data("modal-resize", { top: 0, left: 0, height: 1, width: 1 })).add(e('<div class="modal-resize-s"></div>').appendTo(f).data("modal-resize", { top: 0, left: 0, height: 1, width: 0 })).add(e('<div class="modal-resize-sw"></div>').appendTo(f).data("modal-resize", { top: 0, left: 1, height: 1, width: -1 })).add(e('<div class="modal-resize-w"></div>').appendTo(f).data("modal-resize", { top: 0, left: 1, height: 0, width: -1 })).mousedown(function (t) { N = h.width(); C = h.height(); var n = f.position(); x = n.left; T = n.top; k = t.pageX; L = t.pageY; A = e(this).data("modal-resize"); t.preventDefault(); i.on("mousemove", O).on("mouseup", M) }).on("selectstart", a) } if (n.draggable) { _ = function (e) { var t = e.type === "touchmove", n = t ? e.originalEvent.touches[0] : e; z(x + (n.pageX - k), T + (n.pageY - L)) }; D = function (e) { var t = e.type === "touchend"; i.off(t ? "touchmove" : "mousemove", _).off(t ? "touchend" : "mouseup", D) }; f.on("touchstart mousedown", ".modal-bar", function (t) { if (e(t.target).closest(".modal-actions").length > 0) { return } var n = f.position(); x = n.left; T = n.top; touchEvent = t.type === "touchstart", offsetHolder = touchEvent ? t.originalEvent.touches[0] : t, k = offsetHolder.pageX; L = offsetHolder.pageY; t.preventDefault(); i.on(touchEvent ? "touchmove" : "mousemove", _).on(touchEvent ? "touchend" : "mouseup", D) }).on("selectstart", ".modal-bar", a) } f.mousedown(function () { f.putModalOnFront() }); e.each(n.actions, function (t, r) { if (typeof r === "function") { r = { click: r } } if (!d) { d = e('<ul class="modal-actions children-tooltip"></ul>').prependTo(l || f).data("tooltip-options", n.actionsTooltips) } e("<li" + (r.color ? ' class="' + r.color + '-hover"' : "") + '><a href="#" title="' + t + '">' + t + "</a></li>").appendTo(d).children("a").click(function (t) { t.preventDefault(); r.click.call(this, e(this).closest(".modal"), t) }) }); e.each(n.buttons, function (t, r) { if (typeof r === "function") { r = { click: r } } if (!v) { v = e('<div class="modal-buttons align-' + n.buttonsAlign + (n.buttonsLowPadding ? " low-padding" : "") + '"></div>').insertAfter(h) } else { F = " mid-margin-left" } e('<button type="button" class="button' + (r.classes ? " " + r.classes : "") + F + '">' + t + "</button>").appendTo(v).click(function (t) { r.click.call(this, e(this).closest(".modal"), t) }) }); J(); f.data("modal", { contentBlock: h, contentBlockIframe: p, setContent: R, load: W, setContentSize: U, setPosition: z, setTitle: X, close: V, updateMaxSizes: J, closeOnBlur: n.closeOnBlur }); f.centerModal().css({ opacity: 0, marginTop: "-30px" }).animate({ opacity: 1, marginTop: "10px" }, 200).animate({ marginTop: 0 }, 100); e.modal.current = f; e.modal.all = r.children(".modal"); if (n.onOpen) { n.onOpen.call(f[0]) } if (!n.useIframe && n.url) { W(n.url, n.ajax) } return f }; e.modal.current = false; e.modal.all = e(); e.modal.alert = function (t, n) { n = n || {}; return e.modal(e.extend({}, e.modal.defaults.alertOptions, n, { content: t })) }; e.modal.prompt = function (t, n, r, i) { var s = false, o, u; if (typeof r !== "function") { i = r; r = null } i = e.extend({}, e.modal.defaults.promptOptions, i || {}); if (r) { o = i.onClose; i.onClose = function (e) { if (!s && r.call(this) === false) { return false } if (o) { return o.call(this, e) } } } u = i.password ? "password" : "text"; i.content = '<div class="margin-bottom">' + t + '</div><div class="input full-width"><input type="' + u + '" name="prompt-value" id="prompt-value" value="" class="input-unstyled full-width"></div>'; i.buttons = {}; i.buttons[i.textCancel] = { classes: "glossy", click: function (e) { e.closeModal() } }; i.buttons[i.textSubmit] = { classes: "blue-gradient glossy", click: function (e) { s = true; if (n.call(e[0], e.find("input:first").val()) === false) { return } e.closeModal() } }; return e.modal(i) }; e.modal.confirm = function (t, n, r, i) { i = e.extend({}, e.modal.defaults.confirmOptions, i || {}); var s = false, o = i.onClose; i.onClose = function (e) { if (!s) { r.call(this) } if (o) { return o.call(this, e) } }; i.content = t; i.buttons = {}; i.buttons[i.textCancel] = { classes: "glossy", click: function (e) { e.closeModal() } }; i.buttons[i.textConfirm] = { classes: "blue-gradient glossy", click: function (e) { s = true; n.call(e[0]); e.closeModal() } }; return e.modal(i) }; e.fn.modal = function (t) { var n = e(); this.each(function () { var r = e(this); n = n.add(e.modal(e.extend({}, t, r.data("modal-options"), { content: r }))) }); return n }; e.fn.getModalContentBlock = function () { if (this.hasClass(".modal-content")) { return this } var t = this.getModalWindow().data("modal"); return t ? t.contentBlockIframe || t.contentBlock : e() }; e.fn.getModalWindow = function () { return this.closest(".modal") }; e.fn.setModalContent = function (t, n) { this.each(function () { var r = e(this).getModalWindow(), i = r.length > 0 ? r.data("modal") : false; if (i) { i.setContent(t); if (n) { i.setContentSize(true, false) } } }); return this }; e.fn.setModalContentSize = function (t, n) { this.each(function () { var r = e(this).getModalWindow(), i = r.length > 0 ? r.data("modal") : false; if (i) { i.setContentSize(t, n) } }); return this }; e.fn.loadModalContent = function (t, n) { var r = e.extend({}, e.modal.defaults.ajax, n); this.each(function () { var n = e(this).getModalWindow(), i = n.length > 0 ? n.data("modal") : false; if (i) { i.load(t, r) } }); return this }; e.fn.setModalTitle = function (t) { this.each(function () { var n = e(this).getModalWindow(), r = n.length > 0 ? n.data("modal") : false; if (r) { r.setTitle(t) } }); return this }; e.fn.centerModal = function (t) { this.each(function () { var n = e(this).getModalWindow(), r = n.length > 0 ? n.data("modal") : false; if (r) { r.setPosition(Math.round((s - n.outerWidth()) / 2), Math.round((o - n.outerHeight()) / 2), t) } }); return this }; e.fn.setModalPosition = function (t, n, r) { this.each(function () { var i = e(this).getModalWindow(), s = i.length > 0 ? i.data("modal") : false; if (s) { s.setPosition(t, n, r) } }); return this }; e.fn.putModalOnFront = function () { if (e.modal.all.length > 1) { var t = u(); this.each(function () { var n = e(this).getModalWindow(); if (n.next(".modal").length > 0) { n.detach().appendTo(t) } }) } return this }; e.fn.closeModal = function () { return this.each(function () { var t = e(this).getModalWindow(), n = t.data("modal"); if (n) { n.close() } }) }; e.modal.defaults = { blocker: true, blockerVisible: true, closeOnBlur: false, classes: "", beforeContent: "", afterContent: "", content: false, contentBg: true, contentAlign: "left", useIframe: false, url: false, ajax: { loadingMessage: null, errorMessage: "Error while loading content. Please try again.", resize: false, resizeOnMessage: false, resizeOnLoad: false }, titleBar: null, title: false, draggable: true, resizable: true, scrolling: true, horizontalScrolling: false, actions: { Kapat: { color: "red", click: function (e) { e.closeModal() } } }, actionsTooltips: { spacing: 5, classes: ["black-gradient"], animateMove: 5 }, buttons: {}, buttonsAlign: "right", buttonsLowPadding: false, onOpen: false, onClose: false, maxSizeMargin: 10, minHeight: 16, minWidth: 200, maxHeight: false, maxWidth: false, height: false, width: false, resizeToFit: true, alertOptions: { contentBg: false, contentAlign: "center", minWidth: 120, width: false, maxWidth: 260, resizable: false, actions: {}, buttons: { Kapat: { classes: "blue-gradient glossy big full-width", click: function (e) { e.closeModal() } } }, buttonsAlign: "center", buttonsLowPadding: true }, promptOptions: { width: false, maxWidth: 260, resizable: false, actions: {}, password: false, textCancel: "iptal", textSubmit: "evet" }, confirmOptions: { contentAlign: "center", minWidth: 120, width: false, maxWidth: 260, buttonsAlign: "center", textCancel: "iptal", textConfirm: "onayla" } } })(jQuery, window, document)