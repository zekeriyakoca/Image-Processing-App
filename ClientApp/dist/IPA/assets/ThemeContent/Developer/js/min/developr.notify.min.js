(function (e, t, n, r) { function o() { if (!s) { s = e('<div id="top-notifications"></div>').appendTo(n.body) } return s } function a() { if (!u) { u = e('<div id="bottom-notifications"></div>').appendTo(n.body) } return u } function f(n, r, i) { var s = n.data("notifications-archive") || [], o = r > 0 ? Math.min(s.length, r) : s.length, u, a; for (u = 0; u < o; ++u) { a = s.shift(); t.notify(a.title, a.message, e.extend(a.options, { delay: u * 100 }), true) } if (s.length === 0) { n.remove(); return false } else { archiveSize = s.length; n.text(archiveSize > 1 ? i.textSeveralMore.replace("%d", archiveSize) : i.textOneMore); return true } } function l(e, t) { e.data("notification-timeout", setTimeout(function () { e.fadeAndRemove().trigger("close") }, t)); e.hover(function () { clearTimeout(e.data("notification-timeout")) }, function () { e.data("notification-timeout", setTimeout(function () { e.fadeAndRemove().trigger("close") }, t)) }) } var i = e(n); var s = false; var u = false; t.notify = function (s, u, c, h) { if (u == r || typeof u === "object") { c = u || {}; u = s; s = "" } c = c || {}; h = h || false; if (!e.isReady || c != r && c.delay > 0) { var p = c != r ? c.delay || 40 : 40; setTimeout(function () { t.notify(s, u, e.extend(c, { delay: 0 }), h) }, p) } else { if (!c.vPos) { c.vPos = t.notify.defaults.vPos } if (!c.hPos) { c.hPos = t.notify.defaults.hPos } var d = e.extend({}, t.notify.defaults, t.notify.defaults[c.vPos.toLowerCase()], t.notify.defaults[c.hPos.toLowerCase()], t.notify.defaults[c.vPos.toLowerCase() + c.hPos.toLowerCase()], c); if (d.system && t.notify.hasNotificationPermission()) { var v = e.trim(s).length > 0 ? s : n.title, m = t.webkitNotifications.createNotification(d.icon || "", v, u); if (d.autoClose || d.onDisplay) { m.ondisplay = function () { if (d.onDisplay) { d.onDisplay.call(m) } if (d.autoClose) { setTimeout(function () { m.cancel() }, d.closeDelay) } } } if (d.link && d.link.length > 0 || d.onClick) { m.onclick = function () { if (d.onClick) { d.onClick.call(m) } if (d.link && d.link.length > 0) { m.cancel(); n.location.href = d.link } } } if (d.onClose) { m.onclose = function () { d.onClose.call(m) } } m.onerror = function () { if (d.onError) { if (d.onError.call(m) === false) { return } } t.notify(s, u, e.extend(d, { system: false }), h) }; m.show(); return } var g = ["notification"].concat(d.classes), y = "notifications-" + d.vPos.toLowerCase() + "-" + d.hPos.toLowerCase(), b = e("#" + y), w = d.icon && d.icon.length > 0 ? '<img class="notification-icon' + (d.iconOutside ? " outside" : "") + '" src="' + d.icon + '">' : "", E = d.hPos.toLowerCase() === "left" ? "right" : "left", S = w.length > 0 && d.iconOutside ? '<span class="block-arrow ' + E + '"><span></span></span>' : "", x = d.closeButton ? '<span class="close' + (d.showCloseOnHover ? " show-on-parent-hover" : "") + '">✕</span>' : "", T = e.trim(s).length > 0 ? "<h3>" + s + "</h3>" : "", N = d.title.length > 0 ? ' title="' + d.title + '"' : "", C = d.link.length > 0 ? '<a href="' + d.link + '"' + N + ">" : "<div" + N + ">", k = d.link.length > 0 ? "</a>" : "</div>", L = false, A = b.children(".more-notifications"), O, M, _, D; if (b.length === 0) { b = e('<ul id="' + y + '"></ul>').appendTo(d.vPos.toLowerCase() === "top" ? o() : a()) } O = b.children().not(".closing").not(".more-notifications"); if (d.groupSimilar) { O.each(function (t) { var n = e(this), r = n.data("notification-data"), o, a, f, h; if (r.title === s.toLowerCase() && r.message === u.toLowerCase()) { o = n.children(".extra-notifications"); if (o.length > 0) { f = o.data("notifications-archive") || [] } else { o = e('<p class="extra-notifications"></p>').appendTo(n); f = [] } a = n.data("notification-timeout"); if (a) { clearTimeout(a); n.off("mouseenter"); n.off("mouseleave") } if (!d.stickGrouped && (a || d.autoClose)) { l(n, d.closeDelay) } f.push({ title: s, message: u, options: c }); h = f.length; o.text(h > 1 ? d.textSeveralSimilars.replace("%d", h) : d.textOneSimilar); o.data("notifications-archive", f); if (!n.is(":animated")) { n.shake(i.width() >= 768 ? 15 : 5) } L = true; return false } }) } if (!L && d.limit > 0 && O.length >= d.limit) { if (h || d.rotate) { O.eq(0).addClass("closing").foldAndRemove() } else { if (A.length > 0) { archive = A.data("notifications-archive") || [] } else { A = e('<li class="notification more-notifications"></li>').appendTo(b); archive = []; A.click(function (e) { f(A, d.releaseLimit, d) }) } archive.push({ title: s, message: u, options: c }); archiveSize = archive.length; A.text(archiveSize > 1 ? d.textSeveralMore.replace("%d", archiveSize) : d.textOneMore); A.data("notifications-archive", archive); L = true } } if (L) { return } if (e.trim(s).length === 0) { g.push("no-title") } _ = e('<li class="' + g.join(" ") + '">' + w + S + C + T + u + k + x + "</li>"); if (A.length > 0) { _.insertBefore(A).hide().slideDown() } else { _.appendTo(b).hide().fadeIn("slow") } if (d.onDisplay) { d.onDisplay.call(_[0]) } if (d.onClick) { _.children().not(".close").on("click", d.onClick) } _.data("notification-data", { title: s.toLowerCase(), message: u.toLowerCase(), closeDelay: d.closeDelay }); _.on("close", function () { _.addClass("closing"); var e = b.children(".more-notifications"); if (e.length > 0) { _.stop(true).foldAndRemove(); f(e, 1, d) } }); if (d.onClose) { _.on("close", d.onClose) } if (d.autoClose) { l(_, d.closeDelay) } } }; t.notify.hasNotificationAPI = function () { return !!t.webkitNotifications }; t.notify.isNotificationPermissionSet = function () { return t.notify.hasNotificationAPI() && t.webkitNotifications.checkPermission() != 1 }; t.notify.hasNotificationPermission = function () { return t.notify.hasNotificationAPI() && t.webkitNotifications.checkPermission() == 0 }; t.notify.showNotificationPermission = function (n, r) { var i = false; if (!t.notify.hasNotificationAPI()) { return } if (typeof n === "string") { if (!e.fn.message) { return } i = e("#main").message(n, { node: "a", classes: ["align-center", "green-gradient"], simpler: true, inset: true }); n = i } n.click(function (e) { if (e.target !== this) { return } e.preventDefault(); t.webkitNotifications.requestPermission(function () { if (i) { i.fadeAndRemove() } if (r && typeof r === "function") { r() } }) }) }; t.notify.defaults = { system: false, vPos: "top", hPos: "right", classes: [], link: "", title: "", icon: "", iconOutside: true, closeButton: true, showCloseOnHover: true, autoClose: true, closeDelay: 8e3, delay: 0, groupSimilar: true, stickGrouped: false, textOneSimilar: "Bir benzer bildirim", textSeveralSimilars: "%d benzer bildirim", limit: 7, rotate: false, textOneMore: "Bir kez daha bildirim", textSeveralMore: "%d kez daha bildirim", releaseLimit: 5, top: {}, bottom: {}, left: {}, center: {}, right: {}, topleft: {}, topcenter: {}, topright: {}, bottomleft: {}, bottomcenter: {}, bottomright: {}, onDisplay: null, onClick: null, onClose: null, onError: null } })(jQuery, window, document)