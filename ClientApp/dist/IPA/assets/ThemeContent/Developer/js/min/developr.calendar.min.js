(function (e, t, n) { var r = e(t), i = [["medium", 280], ["large", 622], ["largest", 780]]; r.on("touchend click", ".calendar > tbody > tr > td, .calendar > tbody > tr > th", function (t) { if (!e.template.processTouchClick(this, t)) { return } if (t.target.nodeName.toLowerCase() === "a" || t.isDefaultPrevented()) { return } var n = e(this).closest("th, td"), r = n.children(".cal-events"), i = n.prevAll().length, s = n.parent(), o = s.children().length, u = s.closest(".calendar"), a = s.siblings(".calendar-zoom"), f, l; if (s.hasClass("calendar-zoom")) { return } if (!u.hasClass("fluid") && !u.hasClass("with-events")) { return } if (r.length > 0) { f = s.next(".calendar-zoom"); if (f.length === 0) { f = e('<tr class="calendar-zoom">' + '<td colspan="' + o + '">' + '<span class="calendar-zoom-arrow"></span>' + "</td>" + "</tr>").insertAfter(s); animateWrapper = true } else { a = a.not(f) } l = f.children(); l.children().not(".calendar-zoom-arrow").remove(); l.append(r.clone(true).css("width", "")); l.children(".calendar-zoom-arrow").css("margin-left", Math.round((i + .5) * (s.width() / o) - 12) + "px").data("active-cell-index", i) } if (a.length > 0) { a.remove() } }); e.fn.fluidCalendar = function (t) { var n = e.extend({}, e.fn.fluidCalendar.defaults, t); this.each(function (t) { var r = e(this).closest("table.calendar"), s = e.extend({}, n, r.data("calendar-options")), o; if (r.length === 0) { return } o = function () { var t = r.children("thead"), n = t.children().children(), o = r.children("tbody"), u = o.children(), a = u.not(".calendar-zoom"), f = u.filter(".calendar-zoom"), l = a.children(), c = l.children(".cal-events"), h = n.length, p = r.width(), d = Math.floor((p - (h - 1)) / h), v = false, m, g, y; for (m = 0; m < i.length; ++m) { if (p > i[m][1]) { if (v) { r.removeClass(v) } v = i[m][0]; r.addClass(i[m][0]) } else { r.removeClass(i[m][0]) } } n.css("width", d + "px"); l.css("height", Math.min(d, s.maxHeight) + "px"); f.each(function (t) { var n = e(this).children().children(".calendar-zoom-arrow"); n.css("margin-left", Math.round((n.data("active-cell-index") + .5) * (p / h) - 12) + "px") }); if (c.length > 0) { g = c.eq(0).parseCSSValue("padding-left"); y = c.eq(0).parseCSSValue("padding-right"); c.css("width", d - g - y + "px") } if (s.onSizeChange) { s.onSizeChange.call(r[0]) } }; r.removeClass("fluid").addClass("with-events").css("width", "100%"); o(); r.widthchange(o); r.data("calendar", { refreshSize: o }) }); return this }; e.fn.fluidCalendarRefresh = function () { return this.each(function (t) { var n = e(this).closest(".calendar").data("calendar"); if (n) { n.refreshSize() } }) }; e.fn.fluidCalendar.defaults = { maxHeight: 130, onSizeChange: null }; e.template.addSetupFunction(function (e, t) { this.findIn(e, t, "table.calendar.fluid").fluidCalendar(); return this }) })(jQuery, document)