(function (e, t, n) { function s(t, n, r, i, s) { var o; o = e.Event("wizardleave"); o.wizard = { current: i[0], target: r[0], forward: r.prevAll(i).length > 0 }; i.trigger(o); if (o.isDefaultPrevented()) { return } if (s) { n.prevAll("fieldset").not(".completed").markWizardStepAsComplete(); n.markWizardStepAsCurrent() } r.addClass("active"); n.addClass("active").trigger("wizardenter"); if (e.validationEngine) { t.validationEngine("hideAll") } r.siblings(".active").removeClass("active"); i.removeClass("active"); t.trigger("wizardchange") } var r = e(t), i = e(n); i.on("click", ".wizard-steps > li", function (t) { var n = e(this), r = n.data("wizard-fieldset"); if (r) { r.showWizardStep() } }); e.fn.wizard = function (t) { var n = e.extend({}, e.fn.wizard.defaults, t); this.filter("form").removeClass("wizard-enabled").each(function (t) { var r = e(this).addClass("wizard"), i = e.extend({}, n, r.data("wizard-options")), s = r.find(".wizard-steps"), o = r.find("fieldset"), u = r.hasClass("same-height"), a, f, l = 0; if (o.length === 0) { return } r.data("wizard-options", i); f = e.template.disableDOMWatch(); a = o.filter(".current"); if (a.length === 0) { o.eq(0).addClass("current") } else if (a.length > 1) { a.not(":last").removeClass("current") } a = o.filter(".active"); if (a.length === 0) { o.eq(0).addClass("active") } else if (a.length > 1) { a.not(":last").removeClass("active") } if (s.length === 0) { s = e('<ul class="wizard-steps"></ul>').insertBefore(o[0]) } else { s.empty() } o.each(function (t) { var n = e(this), a = [], f = n.find("legend").text(), c = n.find(".wizard-controls"), h, p, d, v; if (n.hasClass("completed")) { a.push("completed") } else if (n.hasClass("current")) { a.push("current") } if (n.hasClass("active")) { a.push("active") } if (!f || e.trim(f).length === 0) { f = i.defaultTitle.replace("%", t + 1) } d = e("<li" + (a.length ? ' class="' + a.join(" ") + '"' : "") + '><span class="wizard-step">' + (t + 1) + "</span> " + f + "</li>").appendTo(s); d.data("wizard-fieldset", n); n.data("wizard-step", d); if (c.length === 0) { c = e(i.controlsWrapper).appendTo(n) } else { c.find(".wizard-spacer").remove() } h = c.find(".wizard-prev"); p = c.find(".wizard-next"); if (t > 0) { if (h.length === 0) { e(i.controlPrev).prependTo(c).applySetup().click(function (e) { e.preventDefault(); r.showWizardPrevStep() }) } } else { h.remove() } if (t < o.length - 1) { if (p.length === 0) { e(i.controlNext).appendTo(c).applySetup().click(function (e) { e.preventDefault(); r.showWizardNextStep() }) } } else { p.remove() } if (u) { l = Math.max(l, n.height()) } }); if (u) { o.each(function (t) { var n = e(this), r = n.find(".wizard-controls"); r.prepend('<div class="wizard-spacer" style="height:' + (l - n.height()) + 'px"></div>') }) } if (f) { e.template.enableDOMWatch() } o.filter(".active").trigger("wizardenter") }).addClass("wizard-enabled"); return this }; e.fn.lockWizard = function () { return this.each(function (t) { var n = e(this).closest(".wizard-enabled"), r; if (!n.length || n.data("wizard-locked")) { return } r = n.find("input, select, textarea").not(":disabled"); n.data("wizard-locked", { inputs: e.fn.disableInput ? r.disableInput() : r.prop("disabled", true).addClass("disabled"), buttons: n.find(".wizard-prev, .wizard-next").not(".disabled").addClass("disabled") }) }) }; e.fn.isWizardLocked = function () { return !!this.eq(0).closest(".wizard-enabled").data("wizard-locked") }; e.fn.unlockWizard = function () { return this.each(function (t) { var n = e(this).closest(".wizard-enabled"), r = n.data("wizard-locked"); if (!n.length || !r) { return } if (e.fn.enableInput) { r.inputs.enableInput() } else { r.inputs.prop("disabled", false).removeClass("disabled") } r.buttons.removeClass("disabled"); n.removeData("wizard-locked") }) }; e.fn.showWizardStep = function (t) { return this.each(function (n) { var r = e(this).closest("fieldset"), i = r.data("wizard-step"), o = r.closest(".wizard-enabled"), u = o.data("wizard-options"), a, f, l, c, h, p, d; if (r.length === 0 || !i) { return } if (o.isWizardLocked()) { return } if (r.hasClass("active")) { return } a = r.siblings(".active"); f = a.hasClass("current"); l = a.nextAll("fieldset").filter(r).length > 0; c = f && l; if (!f && !r.hasClass("completed") && !r.hasClass("current") && !t) { return } if (!t && u.useValidation && e.validationEngine && (!f || c)) { h = o.removeClass("validating").validationEngine("validate"); if (h === false) { return } else if (!h) { o.lockWizard(); p = o.data("jqv"); d = p.onAjaxFormComplete; p.onAjaxFormComplete = function (e, t, n, u) { o.unlockWizard(); if (e) { s(o, r, i, a, c) } if (d) { d.call(this, e, t, n, u) } p.onAjaxFormComplete = d }; return } } s(o, r, i, a, c) }) }; e.fn.showWizardPrevStep = function (t) { return this.each(function (n) { var r = e(this).closest(".wizard-enabled"), i = r.find("fieldset.active"), s = i.prevAll("fieldset").first(); if (s.length > 0) { s.showWizardStep(t) } }) }; e.fn.showWizardNextStep = function (t) { return this.each(function (n) { var r = e(this).closest(".wizard-enabled"), i = r.find("fieldset.active"), s = i.nextAll("fieldset").first(); if (s.length > 0) { s.showWizardStep(t) } }) }; e.fn.markWizardStepAsComplete = function () { return this.each(function (t) { var n = e(this).closest("fieldset"), r = n.data("wizard-step"); if (n.length === 0 || !r) { return } r.addClass("completed"); n.addClass("completed") }) }; e.fn.markWizardStepAsCurrent = function () { return this.each(function (t) { var n = e(this).closest("fieldset"), r = n.data("wizard-step"); if (n.length === 0 || !r) { return } r.addClass("current"); n.addClass("current"); r.siblings(".current").removeClass("current"); n.siblings(".current").removeClass("current") }) }; e.fn.wizard.defaults = { defaultTitle: "Step %", controlsWrapper: '<div class="field-block button-height wizard-controls clearfix"></div>', controlPrev: '<button type="button" class="button glossy mid-margin-right wizard-prev float-left"><span class="button-icon anthracite-gradient"><span class="icon-backward"></span></span>geri</button>', controlNext: '<button type="button" class="button glossy mid-margin-right wizard-next float-right">ileri<span class="button-icon right-side"><span class="icon-forward"></span></span></button>', useValidation: true }; e.template.addSetupFunction(function (e, t) { this.findIn(e, t, ".wizard").wizard(); return this }) })(jQuery, window, document)